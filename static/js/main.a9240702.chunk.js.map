{"version":3,"sources":["components/Nav.js","components/Container.js","components/Row.js","components/Col.js","components/Card.js","components/EmployeesResults.js","components/SearchForm.js","components/Filter.js","utils/API.js","components/Search.js","App.js","serviceWorker.js","index.js"],"names":["Nav","props","className","Container","fluid","children","Row","Col","size","split","map","join","Card","styles","title","EmployeesResults","employees","e","i","key","name","first","last","email","SearchForm","htmlFor","onChange","handleInputChange","value","search","type","placeholder","id","onClick","handleFormSubmit","class","Filter","handleSortUp","handleSortDown","axios","get","Search","state","results","filteredResults","error","searchByName","searchValue","filteredResult","filter","employee","setState","event","target","preventDefault","trim","sortedUpResult","sort","a","b","lastNameA","lastNameB","sortedDownResult","API","then","res","data","catch","err","console","log","this","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a9240702.chunk.js","sourcesContent":["\n\nimport React from \"react\";\n\nfunction Nav(props) {\n  return (\n    <nav className=\"navbar navbar-light bg-primary\">\n    <span className=\"navbar-brand mb-0 h1 text-white mx-auto\">Employee Directory<i className=\"fas fa-users text-white ml-2\"/></span>\n    </nav>\n  );\n}\n\nexport default Nav;","import React from \"react\";\n\nfunction Container(props) {\n  return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`}>{props.children}</div>;\n}\n\nexport default Container;\n","import React from \"react\";\n\nfunction Row(props) {\n  return <div className={`row${props.fluid ? \"-fluid\" : \"\"}`}>{props.children}</div>;\n}\n\nexport default Row;\n","import React from \"react\";\n\n// This Col component offers us the convenience of being able to set a column's \"size\" prop instead of its className\n// We can also omit the col- at the start of each Bootstrap column class, e.g. size=\"md-12\" instead of className=\"col-md-12\"\n\nfunction Col(props) {\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n\n  return (\n    <div className={size}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Col;\n","import React from \"react\";\n\nfunction Card(props) {\n  return (\n    <div className={props.styles}>\n      <div className=\"card text-center\">\n        <div className=\"card-header\">\n          <h2>{props.title}</h2>\n        </div>\n        <div className=\"card-body\">{props.children}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\n\nfunction EmployeesResults(props) {\n  return (\n    <table>\n        <thead>\n            <tr>\n                <th>First Name</th>\n                <th>Last Name</th>\n                <th>Email</th>\n            </tr>\n        </thead>\n        <tbody>\n            {props.employees.map((e, i) => {\n                return (<tr key={i}>\n                    <td>{e.name.first}</td>\n                    <td>{e.name.last}</td>\n                    <td>{e.email}</td>\n                </tr>)\n            })}\n        </tbody>\n    </table>\n  );\n}\n\nexport default EmployeesResults;","import React from \"react\";\n\nfunction SearchForm(props) {\n  return (\n    <form>\n      <div className=\"form-group search-widget\">\n        <div className=\"input-group mb-3\">\n          <label htmlFor=\"search\" className=\"w-100\">Search by Last Name:</label><br/>\n          <input\n            onChange={props.handleInputChange}\n            value={props.search}\n            name=\"search\"\n            type=\"text\"\n            className=\"form-control\"\n            placeholder='ex. \"Hunt\"'\n            id=\"search\"\n          />\n          <div className=\"input-group-append\">\n            <button onClick={props.handleFormSubmit} className=\"btn btn-primary\" type=\"button\" id=\"button-addon2\">Search<i class=\"fas fa-search ml-2\"/></button>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","import React from \"react\";\n\nfunction Filter(props) {\n  return (\n    <div className=\"mb-5 sort-widget\">\n        <p>Sort by last name in ascending or descending alphabetical order.</p>\n        <button className=\"btn btn-primary\" onClick={props.handleSortUp}>\n        Sort Up<i class=\"fas fa-chevron-up ml-2\"/>\n        </button>{\" \"}\n        <button className=\"btn btn-secondary\" onClick={props.handleSortDown}>\n        Sort Down<i class=\"fas fa-chevron-down ml-2\"/>\n        </button>\n    </div>\n  );\n}\n\nexport default Filter;\n","import axios from \"axios\";\n\n// Export an object from random user API\n\nexport default {\n  getRandomUser: function() {\n    return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\n  }\n};","import React, { Component } from \"react\";\nimport Nav from \"./Nav\";\nimport Container from \"./Container\";\nimport Row from \"./Row\";\nimport Col from \"./Col\";\nimport Card from \"./Card\";\nimport EmployeesResults from \"./EmployeesResults\";\nimport SearchForm from \"./SearchForm\";\nimport Filter from \"./Filter\";\nimport API from \"../utils/API\";\n\nclass Search extends Component {\n  state = {\n    search: \"\",\n    results: [],\n    filteredResults: [],\n    error: \"\"\n  };\n\n  // When this component mounts, search the random user API for all results\n  componentDidMount() {\n    API.getRandomUser()\n      .then(res => this.setState({ results: res.data.results, filteredResults: res.data.results}))\n      .catch(err => console.log(err));\n      console.log(\"first render\");\n  }\n\n  // Filter our results that gives us back a new array of values that correspond to condition: any values equal to search value\n  searchByName = (searchValue) => {\n    const filteredResult = this.state.results.filter(employee => employee.name.last === searchValue);\n    this.setState({ filteredResults: filteredResult });\n  };\n\n  // When the user inputs a name, it changes the search state to this value\n  handleInputChange = event => {\n    const value = event.target.value;\n    this.setState({\n      search: value\n    });\n  };\n\n  // When search button is clicked, grab the search term and filter the random users into filtered array by results pertaining to that property, in this case the last name.\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.search.trim() === \"\") {\n      this.setState({ filteredResults: this.state.results});\n      return;\n    }\n    this.searchByName(this.state.search);\n  };\n\n  // // Submit search With error message\n  // handleFormSubmit = event => {\n  //   event.preventDefault();\n  //   // If not in the array, log \"no results\"\n  //   if (!this.state.results.includes(this.state.search.trim())) {\n  //     this.setState({ filteredResults: this.state.results});\n  //     console.log(\"No Results\");\n  //   }\n  //   // If input empty, display regular results\n  //   if (this.state.search.trim() === \"\") {\n  //     this.setState({ filteredResults: this.state.results});\n  //     console.log(\"Required Field\");\n  //     return;\n  //   }\n  //   // Search array by searched term\n  //   this.searchByName(this.state.search);\n  // };\n\n  // When sort up button is clicked, sort names alphabetically in ascending order\n  handleSortUp = (event) => {\n    const sortedUpResult = this.state.results.sort((a,b) => {\n      const lastNameA = a.name.last;\n      const lastNameB = b.name.last;\n      if (lastNameB > lastNameA)\n        return -1;\n      if (lastNameB < lastNameA)\n        return 1;\n      return 0;\n    })\n    this.setState({ filteredResults: sortedUpResult });\n  };\n\n\n  // When sort up button is clicked, sort names alphabetically in ascending order\n  handleSortDown = (event) => {\n    const sortedDownResult = this.state.results.sort((a,b) => {\n      const lastNameA = a.name.last;\n      const lastNameB = b.name.last;\n      if (lastNameA > lastNameB)\n        return -1;\n      if (lastNameA < lastNameB)\n        return 1;\n      return 0;\n    })\n    this.setState({ filteredResults: sortedDownResult });\n  };\n\n  // Render all components\n  render() {\n    return (\n    <div>\n      <Nav />\n      <Container>\n        <Row>\n          <Col size=\"md-12\">\n            <Card title={\"Search\"} styles={\"my-5\"}>\n              <SearchForm\n                value={this.state.search}\n                handleInputChange={this.handleInputChange}\n                handleFormSubmit={this.handleFormSubmit}\n              />\n            </Card>\n          </Col>\n          <Col size=\"md-12\">\n              <Card title={\"Employee Directory\"} styles={\"mb-5\"}>\n                <Filter\n                  handleSortUp={this.handleSortUp}\n                  handleSortDown={this.handleSortDown}\n                />\n                <EmployeesResults employees={this.state.filteredResults} />\n              </Card>\n          </Col>\n\n        </Row>\n      </Container>\n    </div>\n    )};\n}\n\nexport default Search;\n","import React from 'react';\nimport Search from \"./components/Search.js\";\nimport './css/App.css';\n\nfunction App() {\n  return (\n    <Search />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}